{"version":3,"file":"static/js/Catalog.a8eb224c.chunk.js","mappings":"iQA4HA,UAxG0B,WACxB,IAAMA,GAAWC,EAAAA,EAAAA,KAEjB,GAA0BC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,WAA1DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAChB,GAA2CJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMI,YAA3EC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,gBACvB,GAAuDP,EAAAA,EAAAA,KACrD,SAACC,GAAD,OAAsBA,EAAMO,WADtBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,KAAMC,EAAvC,EAAuCA,YAIjCC,EAAgBF,EAAKG,aAE3B,EAA0BC,EAAAA,SAAuB,IAAjD,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAU,yCAAG,+FACXC,EAAWV,EAAa,EAAb,mBAA6BA,GAAe,GACvDW,EAASV,EAAW,kBAAcA,GAAgB,GAClDW,EAASR,EAAcS,QAAQ,IAAK,IACpCC,EAAQV,EAAcW,SAAS,KAAO,OAAS,MAErD1B,GACE2B,EAAAA,EAAAA,GAAkB,CAChBN,SAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAE,MAAAA,EACAX,YAAAA,KAGJc,OAAOC,SAAS,EAAG,GAfF,2CAAH,qDAkBVC,EAAoBb,EAAAA,YACxBc,KAAS,SAACC,GACRhC,GAASiC,EAAAA,EAAAA,IAAeD,MACvB,KACH,IAkBFf,EAAAA,WAAgB,WACdG,MACC,CAACT,EAAYC,EAAaG,EAAeD,IAE5C,IAAMoB,EAAU5B,EAAM6B,KAAI,SAACC,GAAD,OAAS,SAAC,MAAD,UAA+BA,GAAZA,EAAIC,OACpDC,GAAW,OAAIC,MAAM,IAAIJ,KAAI,SAACK,EAAGC,GAAJ,OAAc,SAAC,KAAD,GAAeA,MAEhE,OACE,iCACE,SAAC,KAAD,KACA,oBAASC,UAAU,UAAnB,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,iBAAd,yDACA,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,SAAC,KAAD,CACErB,SAAUV,EACVgC,sBA3BgB,SAACN,GAC7BrC,GAAS4C,EAAAA,EAAAA,IAAcP,UA6Bf,iBAAKK,UAAU,uBAAf,WACE,gBAAKA,UAAU,kBAAf,UACE,kBACExB,MAAOA,EACP2B,SAvCM,SAACC,GACrB3B,EAAS2B,EAAMC,OAAO7B,OACtBY,EAAkBgB,EAAMC,OAAO7B,QAsCjB8B,KAAK,OACLC,YAAY,oGAGhB,SAAC,KAAD,CAAM/B,MAAOL,WAGjB,gBAAK6B,UAAU,iBAAf,SACsB,IAAnBR,EAAQgB,QACP,gBAAKR,UAAU,qBAAf,SACc,YAAXrC,EAAuBiC,GAAW,SAAC,KAAD,OAGrC,gBAAKI,UAAU,qBAAf,SAAqCR,OAGzC,SAAC,KAAD,CAAYiB,kBA/CQ,SAACC,GAC3BpD,GAASqD,EAAAA,EAAAA,IAAeD,IAExBxB,OAAOC,SAAS,EAAG,WA+ChBpB,IAAmB,SAAC,KAAD,IACnBD,IAAiB,SAAC,KAAD,KAClB,SAAC,KAAD","sources":["pages/Catalog.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport debounce from 'lodash.debounce';\n\nimport { RootState, useAppDispatch } from '../redux/store';\nimport { setCategoryId, setCurrentPage, setSearchValue } from '../redux/filter/slice';\nimport { fetchCatalogItems } from '../redux/catalog/asyncActions';\nimport {\n  CatalogBlock,\n  CatalogCategories,\n  Footer,\n  Header,\n  ModalFavorites,\n  ModalFavoritesError,\n  NotFound,\n  Pagination,\n  Skeleton,\n  Sort,\n} from '../components';\n\nconst Catalog: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { status, items } = useSelector((state: RootState) => state.catalog);\n  const { errorFavModal, successFavModal } = useSelector((state: RootState) => state.favorite);\n  const { categoryId, searchValue, sort, currentPage } = useSelector(\n    (state: RootState) => state.filters,\n  );\n\n  const sortCondition = sort.sortProperty;\n\n  const [value, setValue] = React.useState<string>('');\n\n  const getClothes = async () => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n    const sortBy = sortCondition.replace('-', '');\n    const order = sortCondition.includes('-') ? 'desc' : 'asc';\n\n    dispatch(\n      fetchCatalogItems({\n        category,\n        search,\n        sortBy,\n        order,\n        currentPage,\n      }),\n    );\n    window.scrollTo(0, 0);\n  };\n\n  const updateSearchValue = React.useCallback(\n    debounce((str: string) => {\n      dispatch(setSearchValue(str));\n    }, 150),\n    [],\n  );\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n  };\n\n  const onClickChangeCategory = (id: number) => {\n    dispatch(setCategoryId(id));\n  };\n\n  const onChangeCurrentPage = (page: number) => {\n    dispatch(setCurrentPage(page));\n\n    window.scrollTo(0, 0);\n  };\n\n  React.useEffect(() => {\n    getClothes();\n  }, [categoryId, searchValue, sortCondition, currentPage]);\n\n  const clothes = items.map((obj) => <CatalogBlock key={obj.id} {...obj} />);\n  const skeleton = [...Array(6)].map((_, index) => <Skeleton key={index}></Skeleton>);\n\n  return (\n    <>\n      <Header />\n      <section className=\"catalog\">\n        <div className=\"container\">\n          <h3 className=\"catalog__title\">Каталог</h3>\n          <div className=\"catalog__filter-items\">\n            <div className=\"catalog__filter-item\">\n              <CatalogCategories\n                category={categoryId}\n                onClickChangeCategory={onClickChangeCategory}\n              />\n            </div>\n            <div className=\"catalog__filter-item\">\n              <div className=\"catalog__search\">\n                <input\n                  value={value}\n                  onChange={onChangeInput}\n                  type=\"text\"\n                  placeholder=\"Введіть ваш запит\"\n                />\n              </div>\n              <Sort value={sort} />\n            </div>\n          </div>\n          <div className=\"catalog__items\">\n            {clothes.length === 0 ? (\n              <div className=\"catalog__item item\">\n                {status === 'pending' ? skeleton : <NotFound />}\n              </div>\n            ) : (\n              <div className=\"catalog__item item\">{clothes}</div>\n            )}\n          </div>\n          <Pagination onClickPageChange={onChangeCurrentPage} />\n        </div>\n      </section>\n      {successFavModal && <ModalFavorites />}\n      {errorFavModal && <ModalFavoritesError />}\n      <Footer />\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["dispatch","useAppDispatch","useSelector","state","catalog","status","items","favorite","errorFavModal","successFavModal","filters","categoryId","searchValue","sort","currentPage","sortCondition","sortProperty","React","value","setValue","getClothes","category","search","sortBy","replace","order","includes","fetchCatalogItems","window","scrollTo","updateSearchValue","debounce","str","setSearchValue","clothes","map","obj","id","skeleton","Array","_","index","className","onClickChangeCategory","setCategoryId","onChange","event","target","type","placeholder","length","onClickPageChange","page","setCurrentPage"],"sourceRoot":""}